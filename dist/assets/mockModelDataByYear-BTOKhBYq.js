const o={2020:Object.fromEntries(Array.from({length:12}).map((e,t)=>{const r=t+1,n=[[-50,10,2+t%3,100+t*10],[-40,12,6+t%4,200+t*15],[-30,8,3+t%2,300+t*8],[10,-20,8+(t+1)%5,500+t*20],[20,-10,4+t%4,800+t*12]];return[r,n]})),2021:Object.fromEntries(Array.from({length:12}).map((e,t)=>{const r=t+1,n=[[-52,11,3+t%3,120+t*10],[-42,14,7+t%4,220+t*14],[-28,9,2+t%2,320+t*9],[12,-18,6+(t+1)%5,480+t*18],[22,-12,5+t%4,780+t*11]];return[r,n]})),2022:Object.fromEntries(Array.from({length:12}).map((e,t)=>{const r=t+1,n=[[-54,9,4+t%3,140+t*9],[-44,13,8+t%4,240+t*13],[-26,10,5+t%2,340+t*7],[14,-16,9+(t+1)%5,460+t*16],[24,-8,6+t%4,760+t*10]];return[r,n]})),2023:Object.fromEntries(Array.from({length:12}).map((e,t)=>{const r=t+1,n=[[-56,8,5+t%3,160+t*11],[-46,15,9+t%4,260+t*12],[-24,11,6+t%2,360+t*6],[16,-14,10+(t+1)%5,440+t*19],[26,-6,7+t%4,740+t*9]];return[r,n]})),2024:Object.fromEntries(Array.from({length:12}).map((e,t)=>{const r=t+1,n=[[-58,7,6+t%3,180+t*12],[-48,16,10+t%4,280+t*11],[-22,12,7+t%2,380+t*8],[18,-12,11+(t+1)%5,420+t*17],[28,-4,8+t%4,720+t*13]];return[r,n]}))};export{o as modelDataByYear};
